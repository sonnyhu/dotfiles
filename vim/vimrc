set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
Plugin 'scrooloose/nerdtree'
Plugin 'ervandew/supertab'
Plugin 'plasticboy/vim-markdown'
Plugin 'jelera/vim-javascript-syntax'
Plugin 'klen/python-mode'
Plugin 'flazz/vim-colorschemes'
Plugin 'pangloss/vim-javascript'
Plugin 'nathanaelkane/vim-indent-guides'
Plugin 'vim-ruby/vim-ruby'
Plugin 'airblade/vim-gitgutter'
Plugin 'vim-scripts/taglist.vim'
Plugin 'begriffs/haskell-vim-now'
Plugin 'mileszs/ack.vim'
Plugin 'bling/vim-airline'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'tpope/vim-dispatch'
Plugin 'Valloric/YouCompleteMe'
Plugin 'ternjs/tern_for_vim'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line


" general settings
set number
set tabstop=4
set shiftwidth=4
set expandtab
set autochdir
set hlsearch
set lines=999 columns=999
set encoding=utf-8
set wildmenu
set wildmode=list:longest
set hidden
" Remap leader
nnoremap <SPACE> <Nop>
let mapleader = "\<Space>"
" Set the directory of the swap file
" The // indicates that the swap name should be globally unique
set directory=~/.vim/tmp//,/tmp

syntax enable
colorscheme molokai
set guifont=Monaco:h12
highlight Search guibg=grey guifg=blue

" Easier split navigations
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>
set splitbelow
set splitright

" http://unlogic.co.uk/2013/02/08/vim-as-a-python-ide/
" Python-mode
" Activate rope
" Keys:
" K             Show python docs
" <Ctrl-Space>  Rope autocomplete
" <Ctrl-c>g     Rope goto definition
" <Ctrl-c>d     Rope show documentation
" <Ctrl-c>f     Rope find occurrences
" <Leader>b     Set, unset breakpoint (g:pymode_breakpoint enabled)
" [[            Jump on previous class or function (normal, visual, operator modes)
" ]]            Jump on next class or function (normal, visual, operator modes)
" [M            Jump on previous class or method (normal, visual, operator modes)
" ]M            Jump on next class or method (normal, visual, operator modes)
let g:pymode_rope = 0

" Support virtualenv
let g:pymode_virtualenv = 0

let g:pymode_lint = 0
" Enable breakpoints plugin
let g:pymode_breakpoint = 1
let g:pymode_breakpoint_key = '<leader>b'

let g:pymode_options_colorcolumn = 0
let g:pymode_options_max_line_length = 200

" syntax highlighting
let g:pymode_syntax = 1
let g:pymode_syntax_all = 1
let g:pymode_syntax_indent_errors = g:pymode_syntax_all
let g:pymode_syntax_space_errors = g:pymode_syntax_all

" Don't autofold code
let g:pymode_folding = 0

"" pymodel_rope
"let g:pymode_rope_project_root = "~/.vim/"
"let g:pymode_rope_ropefolder='~/.vim/.ropeproject'

set completeopt=menu

let g:vim_markdown_folding_disabled=1
let g:pymode_syntax_space_errors = 0
let g:pymode_trim_whitespaces = 1


" Fix for indentation in vim-ruby
autocmd FileType ruby setlocal expandtab shiftwidth=2 tabstop=2

" ack.vim
" Does not open the first match in current tab
cnoreabbrev Ack Ack!

" NERDTree
nnoremap <C-n> :NERDTreeToggle<CR>
" Auto close NERDTree if it is the only thing left open
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" vim-airline
set laststatus=2

" vim-tags
let g:vim_tags_ctags_binary="/usr/local/bin/ctags"
set autochdir
set tags=tags;

" ctrlp
let g:ctrlp_working_path_mode='ra'
let g:ycm_python_binary_path = '/usr/bin/python'

" YouCompleteMe
let g:ycm_auto_trigger = 0
let g:ycm_key_invoke_completion = "<S-SPACE>"
nnoremap <leader>g :YcmCompleter GoTo<CR>
